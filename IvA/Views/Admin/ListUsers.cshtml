@using Microsoft.AspNetCore.Identity
@model IEnumerable<Microsoft.AspNetCore.Identity.IdentityUser>
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> userManager

@{
    ViewData["Title"] = "Nutzerverwaltung";
}

    <h1 style="color: #ffa400 ; margin-bottom:20px"><b>Nutzerverwaltung</b></h1>

<div class="PaketInfo">
    <div class="modal" id="deleteModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content btn-dark">
                <div class="modal-header">
                    <h5 class="modal-title">Warnung</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="modalBody">
                    <p>Wollen Sie den Nutzer wirklich löschen? Dieser Vorgang ist nicht umkehrbar.</p>
                </div>
                <div class="modal-footer">
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="data-whatever">Bestätigen</a>
                    <button type="button" id="deleteButn" class="btn btn-dark" style="color: #ffa400" data-dismiss="modal">Abbrechen</button>
                </div>
            </div>
        </div>
    </div>
    <table class="table bg-table">
        <thead class="bg-table thead-dark">
            <tr>
                <th scope="col" class="FirstLetter">
                    @Html.DisplayNameFor(model => model.UserName)
                </th>
                <th scope="col" class="FirstLetter">
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th scope="col" class="FirstLetter">
                    Projekte
                </th>
                <th scope="col" class="FirstLetter">
                    Rolle
                </th>
                <th scope="col" class="FirstLetter">
                    Optionen
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        <a class="btn btn-dark" style="color:#ffa400" asp-action="ListUserProjects" asp-route-userId="@item.Id">Projekte ansehen</a>
                    </td>
                    <td>
                        @foreach (var role in await userManager.GetRolesAsync(item))
                        {
                            @role
                        }
                    </td>
                    <td>
                        @if (!User.Identity.Name.Equals(item.UserName))
                        {
                            if (!await userManager.IsInRoleAsync(item, "Admin"))
                            {
                                <a class="btn btn-orange" asp-action="ChangeRole" asp-route-id="@item.Id">Admin ernennen</a>
                            }
                            else
                            {
                                <a class="btn btn-danger" asp-action="DeleteUser" asp-route-id="@item.Id">Nutzer löschen</a>
                            }
                            //<a class="btn btn-dark" style="color: #ffa400" href="#deleteModal" data-toggle="modal" data-whatever="@item.Id" user-id="@item.Id">Open Modal</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>